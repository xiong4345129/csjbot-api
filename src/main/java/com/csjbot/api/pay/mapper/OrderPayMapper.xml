<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csjbot.api.pay.service.OrderPayDBService">

    <select id="getAccount" resultType="hashmap">
        select code, value from cms_secret where code_group='weixin';
    </select>

    <resultMap id="OrderPayRecordMap" type="com.csjbot.api.pay.model.PmsOrderPay">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="order_time" jdbcType="TIMESTAMP" property="orderTime"/>
        <result column="order_pseudo_no" jdbcType="VARCHAR" property="orderPseudoNo"/>
        <result column="order_total_fee" jdbcType="INTEGER" property="orderTotalFee"/>
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus"/>
        <result column="order_err_code" jdbcType="VARCHAR" property="orderErrCode"/>
        <result column="order_err_desc" jdbcType="VARCHAR" property="orderErrDesc"/>
        <result column="pay_service" jdbcType="VARCHAR" property="payService"/>
        <result column="pay_method" jdbcType="VARCHAR" property="payMethod"/>
        <result column="pay_code_url" jdbcType="VARCHAR" property="payCodeUrl"/>
        <result column="pay_product_id" jdbcType="VARCHAR" property="payProductId"/>
        <result column="prepay_id" jdbcType="VARCHAR" property="prepayId"/>
        <result column="pay_status" jdbcType="VARCHAR" property="payStatus"/>
        <result column="pay_time_end" jdbcType="TIMESTAMP" property="payTimeEnd"/>
        <result column="pay_err_code" jdbcType="VARCHAR" property="payErrCode"/>
        <result column="pay_err_desc" jdbcType="VARCHAR" property="payErrDesc"/>
        <result column="robot_uid" jdbcType="VARCHAR" property="robotUid"/>
        <result column="robot_model" jdbcType="VARCHAR" property="robotModel"/>
    </resultMap>

    <select id="getOrderPayRecord" resultMap="OrderPayRecordMap" parameterType="string">
      select
          order_id, create_time, update_time, order_time, order_pseudo_no, order_total_fee,
          order_status, order_err_code, order_err_desc, pay_service, pay_method, pay_code_url,
          pay_product_id, prepay_id, pay_status, pay_time_end, pay_err_code, pay_err_desc,
          robot_uid, robot_model
        from pms_order_pay
        where order_id =  #{orderId,jdbcType=VARCHAR}
    </select>

    <insert id="newOrder" parameterType="com.csjbot.api.pay.model.PmsOrderPay">
        insert into pms_order_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_id,
            order_time,
            order_pseudo_no,
            order_total_fee,
            order_status,
            pay_service,
            pay_method,
            pay_product_id,
            pay_status,
            robot_uid,
            robot_model,
            <if test="orderRequestText != null">
                order_request,
            </if>
            <if test="payRequestText != null">
                pay_request,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{orderId,jdbcType=VARCHAR},
            #{orderTime,jdbcType=TIMESTAMP},
            #{orderPseudoNo,jdbcType=VARCHAR},
            #{orderTotalFee,jdbcType=INTEGER},
            #{orderStatus,jdbcType=VARCHAR},
            #{payService,jdbcType=VARCHAR},
            #{payMethod,jdbcType=VARCHAR},
            #{payProductId,jdbcType=VARCHAR},
            #{payStatus,jdbcType=VARCHAR},
            #{robotUid,jdbcType=VARCHAR},
            #{robotModel,jdbcType=VARCHAR},
            <if test="orderRequestText != null">
                #{orderRequestText,jdbcType=LONGVARCHAR},
            </if>
            <if test="payRequestText != null">
                #{payRequestText,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateOrder" parameterType="com.csjbot.api.pay.model.PmsOrderPay">
        UPDATE pms_order_pay
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=VARCHAR},
            </if>
            <if test="orderErrCode != null">
                order_err_code = #{orderErrCode,jdbcType=VARCHAR},
            </if>
            <if test="orderErrDesc != null">
                order_err_desc = #{orderErrDesc,jdbcType=VARCHAR},
            </if>
            <if test="payCodeUrl != null">
                pay_code_url = #{payCodeUrl,jdbcType=VARCHAR},
            </if>
            <if test="prepayId != null">
                prepay_id = #{prepayId,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="payTimeEnd != null">
                pay_time_end = #{payTimeEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="payErrCode != null">
                pay_err_code = #{payErrCode,jdbcType=VARCHAR},
            </if>
            <if test="payErrDesc != null">
                pay_err_desc = #{payErrDesc,jdbcType=VARCHAR},
            </if>
        </trim>
        WHERE order_id = #{orderId,jdbcType=VARCHAR}
    </update>


    <insert id="insertOrderList" parameterType="java.util.List">
        INSERT INTO pms_order_item( order_id, item_id, item_qty, unit_price) VALUES
        <foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
            #{element.orderId}, #{element.itemId}, #{element.itemQty}, #{element.unitPrice}
        </foreach>
    </insert>

    <select id="getUnitPrice" resultType="java.lang.Integer" parameterType="string">
        select round(price*100) up from pms_product where id=#{itemId};
    </select>

    <select id="orderExists" resultType="java.lang.Integer" parameterType="string">
        SELECT EXISTS(SELECT 1 FROM pms_order_pay WHERE order_id= #{orderId} );
    </select>

</mapper>